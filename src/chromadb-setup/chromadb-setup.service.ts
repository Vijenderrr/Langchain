import { Injectable } from '@nestjs/common';
import { ChromaClient, OpenAIEmbeddingFunction } from 'chromadb';

@Injectable()
export class ChromadbSetupService {

    //chromadb is a open-source vector database that is used to store and query embeddings.
    //It is used to store the embeddings generated by the OpenAI API.

    //to check if it is working and chromadb is up and running
    //http://localhost:8000/api/v1/collections


    // docker pull chromadb/chroma   ---> command to pull the chromadb image
    // docker run -d -p 8000:8000 chromadb/chroma

    private client = new ChromaClient({
        path: 'http://localhost:8000',
    })


    private embeddingFunction =  new OpenAIEmbeddingFunction({
        openai_api_key: process.env.OPENAI_API_KEY!,
        openai_model:'text-embedding-3-small'
    })
    async main() {
        const response = await this.client.createCollection({
            name: 'data-test2'
        })
        console.log(response);

    }

    async addData() {
        const collection = await this.client.getOrCreateCollection({
            name: 'data-test2',
            embeddingFunction: this.embeddingFunction
        });
        const result = await collection.add({
            ids: ['id1'],
            documents: ['here is my entry'],
        })
        console.log('collectionss???',collection);
        
        console.log('result????',result);
    }
    

}
